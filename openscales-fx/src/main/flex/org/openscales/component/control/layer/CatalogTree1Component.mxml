<?xml version="1.0" encoding="utf-8"?>
<control:Control xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:control="org.openscales.component.control.*"
    width="100%" height="100%" horizontalScrollPolicy="off" >

<mx:Script>
  <![CDATA[
  	import org.openscales.core.layer.params.ogc.WMSParams;
  	import org.openscales.core.layer.ogc.WMS;
  	import org.openscales.core.layer.ogc.WMSC;
			  	import org.openscales.proj4as.ProjProjection;
			  	import org.openscales.proj4as.Proj4as;
			  	import org.openscales.core.layer.ogc.WFS;
  				import org.openscales.core.basetypes.maps.HashMap;
  			   	import org.openscales.core.events.LayerEvent;
               	import org.openscales.core.Map;
			  	import mx.controls.Tree;
			   	import mx.collections.ArrayCollection;
			   	import org.openscales.core.layer.Layer;
               	import mx.controls.List;
               
               	private var _wfs:WFS;
			   	private var _layerArrayL1:Array;
			   	private var _layerArray2L1:Array;
			   	private var _layerArrayL2:Array;
			   	private var _root:Array;
			   	private var catalogRenderer:ClassFactory = new ClassFactory(Catalog);
               
               	override public function set map(value:Map):void {
				super.map = value;
				
				if(map != null)
				{
                	catalogRenderer.properties = { map: map };
					tree.itemRenderer = catalogRenderer;
					
					_layerArrayL2 = new Array();
					_layerArray2L1 = new Array();
					_layerArrayL1 = new Array({label:"level2", children: _layerArrayL2});
					
					//Create a feature
					_wfs = new WFS("test","http://sigma.openplans.org/geoserver/wfs",null,false,true,null,null,true,null);
					_wfs.typename = "tiger:poi";
					_wfs.minZoomLevel = 21;
					_wfs.use110Capabilities = false;
					_wfs.params.srs = "EPSG:4326";
					_wfs.params.version = "1.0.0";
					_wfs.visible = true;
					
					//An other
					var wfs2:WFS = new WFS("test2","http://sigma.openplans.org/geoserver/wfs",null,false,false,null,null,false,null);
					wfs2.typename = "topp:states";
					wfs2.params.srs = "EPSG:4326";
					wfs2.params.version = "1.0.0";
					wfs2.minZoomLevel = 21;
					wfs2.visible = true;
					
					//A base Layer
				 	var wmsc:WMSC = new WMSC("OpenLayers WMS","http://labs.metacarta.com/wms-c/Basic.py",null,true,true,null,null);
				 	((wmsc as WMS).params as WMSParams).layers = "basic";
				 	
				 	//A other base Layer
				 	var wmsc2:WMSC = new WMSC("Metacarta","http://labs.metacarta.com/wms-c/Basic.py",null,true,true,null,null);
					((wmsc2 as WMS).params as WMSParams).layers = "satellite";
				 	((wmsc2 as WMS).params as WMSParams).format="image/jpeg";
		
					//Add the feature in an array
					
					_layerArrayL1.push(_wfs);
					_layerArrayL2.push(wfs2);
					_layerArray2L1.push(wmsc,wmsc2);
					//Create the root of the tree
					_root = new Array({label:"Overlays", children: _layerArrayL1},{label:"BaseLayers", children: _layerArray2L1});
									
					this.refresh();
				}
				
			  }		  
			  
			  public function refresh():void
			  {
					tree.dataProvider= _root;
			  }
 
  ]]>
</mx:Script>

   
 <mx:Tree id="tree" labelField="label" width="200"  dragEnabled="true"
                     dropEnabled="false"
             dragMoveEnabled="false"/>

</control:Control>

