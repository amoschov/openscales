<?xml version="1.0" encoding="utf-8"?>
<control:Control xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:control="org.openscales.component.control.*"
    width="100%" horizontalScrollPolicy="off" >

<mx:Script>
  <![CDATA[
			  	import org.openscales.proj4as.ProjProjection;
			  	import org.openscales.proj4as.Proj4as;
			  	import org.openscales.core.layer.ogc.WFS;
  				import org.openscales.core.basetypes.maps.HashMap;
  			   	import org.openscales.core.events.LayerEvent;
               	import org.openscales.core.Map;
			  	import mx.controls.Tree;
			   	import mx.collections.ArrayCollection;
			   	import org.openscales.core.layer.Layer;
               	import mx.controls.List;
               
               	private var _wfs:WFS;
			   	private var _layerArray:Array;
			   	private var _root:Array;
			   	private var catalogRenderer:ClassFactory = new ClassFactory(Catalog);
               
               	override public function set map(value:Map):void {
				super.map = value;
				
				if(map != null)
				{
                	catalogRenderer.properties = { map: map };
					tree.itemRenderer = catalogRenderer;
					
					_layerArray = new Array();
					//Create a feature
					_wfs = new WFS("test","http://sigma.openplans.org/geoserver/wfs",null,false,true,null,null,true,null);
					_wfs.typename = "tiger:poi";
					_wfs.minZoomLevel = 21;
					_wfs.use110Capabilities = false;
					_wfs.params.srs = "EPSG:4326";
					_wfs.params.version = "1.0.0";
					
					//Add the feature in an array
					_layerArray.push(_wfs);
					//Create the root of the tree
					_root = new Array({label:"Overlays", children: _layerArray});
									
					this.refresh();
				}
				
			  }		  
			  
			  public function refresh():void
			  {
					tree.dataProvider= _root;
			  }
			  
			  /**
			  * Give a name of all the tree's leaf
			  * 
			  * @param item
			  * 
			  * @return
			  */
			  private function tree_labelFunc(item:Object):String {
               
                var label:String;
                if(item is Layer){
                label = item.name;
                
                }
                else{
                label = item.label;
                } 
                return label;
            }

  ]]>
</mx:Script>

   
 <mx:Tree id="tree" labelField="label" width="200"  dragEnabled="true"
                     dropEnabled="false"
             dragMoveEnabled="false" labelFunction="tree_labelFunc"/>

</control:Control>

