<?xml version="1.0" encoding="utf-8"?>
<control:Control xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:control="org.openscales.component.control.*" creationComplete="this.map.addEventListener(LayerEvent.LAYER_REMOVED,deleteLayer);" >
	
	<mx:Script>
		<![CDATA[
			import org.openscales.core.events.LayerEvent;
			import org.openscales.core.layer.ogc.WFS;
			import mx.controls.Text;
			import mx.controls.Alert;
			import org.openscales.core.basetypes.maps.HashMap;
			import org.openscales.core.layer.Layer;
			import org.openscales.core.layer.capabilities.GetCapabilities;
			import org.openscales.core.Map;
			
			/**
			 * Array used as data provider for the list.
			 */
			private var listDataProvider:Array = null;
			
			/**
			 * Hash map containing the capabilities of all layers available on the WFS server.
			 */
			private var capabilities:HashMap = null;
			
			/**
			 * Hash map containing the capabilities of selected layer
			 */
			private var featureCap:HashMap = null;
			
			/**
			 * Hash map in which we'll store the layers added to the map from the
			 * capabilities retriever component.
			 */
			private var addedLayers:HashMap = new HashMap();
			
			/**
			 * The WFS server url on which we will retrieve the capabilities.
			 */
			private var url:String = null;
						
			/**
			 * Called when a LAYER_REMOVED event is dispatched.
			 * It will remove the layer from the added layers.
			 */
			public function deleteLayer(event:LayerEvent):void
			{
				addedLayers.remove(event.layer.name);
			}
					
			public function onButtonClick(event:MouseEvent):void{
				var getCap:GetCapabilities = new GetCapabilities("wfs", this.txtUrl.text,this.capabilitiesGetter);
				url = this.txtUrl.text;
			}
			
			/**
			 * Method called when the user select an other list element (which is an available layer on server).
			 * It will display the informations about the layer.
			 */
			public function onChangeListElement(event:Event):void {
				// We show to user the informations about the layer
				featureCap = capabilities.getValue(this.list.selectedItem);
				var info:String = "\tInformation about the layer: \n\n";
				info += "Title: " + featureCap.getValue("Title") + "\n";
				info += "Description: " + featureCap.getValue("Abstract") + "\n";
				info += "SRS: " + featureCap.getValue("SRS");
				
				this.txtInfo.text = info;
			}
			
			/**
			 * <p>Double click handler on a list element.</p>
			 * <p>It will add the layer at the map (and so in the layer switcher).</p>
			 */
			public function onDblClickListElement(event:MouseEvent):void {

				//We add the layer to the map
				if (!addedLayers.containsKey(this.list.selectedItem)) {
					var params:Object = new Object();
					params.typename = this.list.selectedItem;
					params.SRS = capabilities.getValue(this.list.selectedItem).getValue("SRS");
					params.VERSION = "1.0.0";
					var newLayer:WFS = new WFS(this.list.selectedItem as String,this.url,params,false,true,null,null,true,capabilities.getValue(this.list.selectedItem as String));
					newLayer.isBaseLayer = false;
					newLayer.minZoomLevel = this.map.numZoomLevels;
					
					this.map.addLayer(newLayer);
					addedLayers.put(this.list.selectedItem,null);
				}
				else {
					Alert.show("This layer is already added", "Message");
				}
				
				
			}
			
			/**
			 * TODO: Refactor this to use events
			 * 
			 * Callback method to retrieve the capabilities from the GetCapabilities instance.
			 * 
			 * @param getCap The GetCapabilities instance that received the capabilities.
			 */
			public function capabilitiesGetter(getCap:GetCapabilities):void {
				this.capabilities = getCap.getAllCapabilities();
				lblFeatures.text = "There are " + capabilities.size() + " features available on server:";
				this.list.dataProvider = capabilities.getKeys().sort();	
			}
			
		]]>
	</mx:Script>
	
	<mx:VBox width="100%">
		<mx:Label text="WFS server URL:" />
		<mx:Label id="lblFeatures" enabled="false"/>
		<mx:HBox width="100%">
			<mx:TextInput width="100%" id="txtUrl" text="http://sigma.openplans.org/geoserver/wfs" displayAsPassword="false" editable="true" enabled="true"/>
			<mx:Button label="Go!" id="butGo" enabled="true" click="this.onButtonClick(event)"/>	
		</mx:HBox>
		
		<mx:List width="100%" height="114" allowMultipleSelection="false" id="list" doubleClickEnabled="true" doubleClick="this.onDblClickListElement(event)" change="this.onChangeListElement(event)"></mx:List>
		<mx:Text width="100%" height="108" id="txtInfo" visible="true"/>
	
	</mx:VBox>
	
</control:Control>