<?xml version="1.0" encoding="utf-8"?>
<control:Control xmlns:mx="http://www.adobe.com/2006/mxml"
				 xmlns:control="org.openscales.component.control.*" xmlns:s="library://ns.adobe.com/flex/spark">
	<mx:Script>
		<![CDATA[
			import mx.managers.CursorManager;

			import org.openscales.core.events.ZoomBoxEvent;
			import org.openscales.core.handler.zoom.ZoomBoxHandler;
			import org.openscales.core.events.DrawingEvent;
			import org.openscales.core.Map;
			import org.openscales.basetypes.LonLat;
			import org.openscales.basetypes.Bounds;
			import org.openscales.basetypes.Pixel;
			import org.openscales.core.handler.Handler;
			import org.openscales.core.handler.mouse.DragHandler;
			import org.openscales.core.cursor.CrosshairCursor;

			[Bindable]
			private var _style:Object = "default";
			[Bindable]
			private var _icon:Object = null;
			[Bindable]
			private var _toolTip:String = "Draw the desired area to zoom in";

			/**
			 * Handler of ZoomBox
			 */
			private var _zoomBoxHandler:ZoomBoxHandler = new ZoomBoxHandler();

			/**
			 * ID of the cursor used during the drawing of the zoom-box.
			 */
			private var zoomBoxCursorID:int = CursorManager.NO_CURSOR;

			override public function set map(value:Map):void {
				super.map = value;
				if (map != null) {
					_zoomBoxHandler.map = map;
					map.addEventListener(ZoomBoxEvent.END, disabled);
				}
			}

			/**
			 * When the user click on the button ZoomBox
			 */
			private function onSelectZoomBox(event:Event):void {
				if (zoombox.selected == false) {
					zoombox.selected = true;
					_zoomBoxHandler.deactiveDrag();
					_zoomBoxHandler.active = true;
					// Change to the specific cursor
					zoomBoxCursorID = CursorManager.setCursor(CrosshairCursor);
				} else {
					_zoomBoxHandler.activeDrag();
					_zoomBoxHandler.active = false;
					zoombox.selected = false;
					// Remove the specific cursor
					CursorManager.removeCursor((zoomBoxCursorID > 0) ? zoomBoxCursorID : CursorManager.currentCursorID);
					zoomBoxCursorID = CursorManager.NO_CURSOR;
				}
			}

			private function disabled(event:ZoomBoxEvent):void {
				_zoomBoxHandler.activeDrag();
				_zoomBoxHandler.active = false;
				zoombox.selected = false;
				// Remove the specific cursor
				CursorManager.removeCursor((zoomBoxCursorID > 0) ? zoomBoxCursorID : CursorManager.currentCursorID);
				zoomBoxCursorID = CursorManager.NO_CURSOR;
			}

			override public function set styleName(value:Object):void {
				super.styleName = value;
				this._style = value;
			}

			override public function set icon(value:Class):void {
				super.icon = value;
				this._icon = value;
			}

			override public function set toolTip(value:String):void {
				super.toolTip = value;
				this._toolTip = value;
			}
		]]>
	</mx:Script>
	

	<mx:Button id="zoombox"
			   width="{this.width}"
			   height="{this.height}"
			   toolTip="{this._toolTip}"
			   useHandCursor="true"
			   buttonMode="true"
			   selected="false"
			   click="onSelectZoomBox(event)"
			   styleName="{this._style}"
			   icon="@Embed('/assets/images/icons/Icons-05.swf')"/>

</control:Control>
