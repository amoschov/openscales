<?xml version="1.0" encoding="utf-8"?>
<control:Control xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:control="org.openscales.component.control.*" >
	
	<mx:Script>
		<![CDATA[
			import org.openscales.core.events.MapEvent;
			import org.openscales.core.events.LayerEvent;
			import org.openscales.core.basetypes.Pixel;
			import org.openscales.core.Map;
			import com.gskinner.motion.GTweeny;
			import mx.events.SliderEvent;
					
			private function onZoomOutClick(event:MouseEvent):void{
				this.map.zoom--;

				// For client zoom
				//scaleOnCenter(map.layerContainer, 0.5, new Point(map.x + (map.width/2), map.y + (map.height/2)));
			}
			
			private function onZoomInClick(event:MouseEvent):void{
				this.map.zoom++;

				// For client zoom
				//scaleOnCenter(map.layerContainer, 2, new Point(map.x + (map.width/2), map.y + (map.height/2)));
			}
			
			private function scaleOnCenter(o:DisplayObject, scale:Number, center:Point):void{
				var currentMatrix:Matrix=o.transform.matrix;
				var endMatrix:Matrix=o.transform.matrix;
				endMatrix.tx -= center.x;
				endMatrix.ty -= center.y;
				endMatrix.scale(scale, scale);
				endMatrix.tx += center.x;
				endMatrix.ty += center.y;
				
			}
			
			public function onZoomSliderThumbRelease(event:SliderEvent):void{
				map.zoom = zoomSlider.value;
			}
			
			private function initializeZoomLevels(event:Event = null):void {
				var zoomLevels:Array = new Array();
				for(var i:int = 0; i<map.resolutions.length; i++) {
					zoomLevels.push(map.getZoomForResolution(map.resolutions[i]));
				}
				zoomSlider.tickValues = zoomLevels;
				zoomSlider.maximum = map.getZoomForResolution(map.minResolution);
				zoomSlider.minimum = map.getZoomForResolution(map.maxResolution);
				zoomSlider.value = map.zoom;
			}
			
			override public function set active(value:Boolean):void
			{
				if(value) {
					initializeZoomLevels();
					map.addEventListener(LayerEvent.BASE_LAYER_CHANGED, this.initializeZoomLevels);
					map.addEventListener(MapEvent.ZOOM_END, this.updateZoomLevels);
				} else {
					map.removeEventListener(LayerEvent.BASE_LAYER_CHANGED, this.initializeZoomLevels);
					map.removeEventListener(MapEvent.ZOOM_END, this.updateZoomLevels);
				}
				
				super.active = value;
			}
			
			private function updateZoomLevels(event:Event = null):void {
				zoomSlider.value = map.zoom;
			}
			
		]]>
	</mx:Script>

	<mx:VBox horizontalAlign="center">
		<mx:Button id="zoomIn" height="30" width="30" alpha="1" icon="@Embed('/org/openscales/component/images/zoomin.swf')" click="this.onZoomInClick(event);" />
		<mx:VSlider id="zoomSlider" 
			liveDragging="true"
			allowTrackClick="true"
			tickInterval="1"
			snapInterval="1"
			thumbRelease="this.onZoomSliderThumbRelease(event)"/>
		<mx:Button id="zoomOut" height="30" width="30" icon="@Embed('/org/openscales/component/images/zoomout.swf')" click="this.onZoomOutClick(event);" />
	</mx:VBox>
</control:Control>
