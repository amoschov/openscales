<?xml version="1.0" encoding="utf-8"?>
<control:Control xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:control="org.openscales.component.control.*"
	xmlns:os="http://openscales.org" creationComplete="initTabDrawing();"
	width="330" height="416">
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import org.openscales.core.feature.VectorFeature;
			import org.openscales.core.events.SpriteCursorEvent;
			import mx.containers.TabNavigator;
			import org.openscales.core.handler.mouse.DragFeature;
			import org.openscales.core.handler.mouse.DragHandler;
			import org.openscales.core.events.FeatureEvent;
			import mx.events.CloseEvent;		
			import org.openscales.core.Map;	
					
			public var dragHandler:DragHandler;		//to pan on the map
			public var dragfeature:DragFeature;		//to drag features

			/**
			 * Initialisation of map and params
			 */
			public function initTabDrawing():void{			
				
				//Manage switching tab
				this.parent.addEventListener(Event.CHANGE,changingTab);
				this.featureDrawing.indexTabDrawing = (this.parent as TabNavigator).selectedIndex;
				
				//Show the handcursor when mouse is hover a feature
				this.map.dispatchEvent(new SpriteCursorEvent(SpriteCursorEvent.SPRITECURSOR_SHOW_HAND));
				
				this.map.addEventListener(FeatureEvent.FEATURE_DRAGGING, onDragingFeature);
				this.map.addEventListener(FeatureEvent.FEATURE_SELECTED, showInformations);
			}
					
			override public function set map(value:Map):void {
				super.map = value;
			}
			
			private function showInformations(event:FeatureEvent):void{
				this.featureInfo.showInfo(event);
			}
			/**
			 * Manage switching tab
			 * To prevent a feature selection. If user isn't on drawing tab, he can't select a feature
			 */
			private function changingTab(event:Event):void{
				var f:org.openscales.core.feature.VectorFeature;
				var selectedFeature:Boolean = false;
				
				//User is on Drawing Tab, and wants to switch	
				if((event.target as TabNavigator).selectedIndex != this.featureDrawing.indexTabDrawing){						
					//Check if some feature are selected
					for each(f in this.featureDrawing.selectFeatureHandler.selectFeatures){
						if(f != null){if(f.selected){selectedFeature=true;}}
					}				
					//if one (or more) feature is selected, we warn user
					if(selectedFeature){
						Alert.okLabel = "Continue";
						Alert.buttonWidth=200;
						Alert.show("One (or more) feature is selected. If you continue, all selection will be lost.", "Warning", Alert.OK | Alert.CANCEL, null, alertContinueHandler);
					}
					//no feature is selected
					else{
						this.featureDrawing.finishPath(); 
						this.featureDrawing.finishPolygon(); 
						this.featureDrawing.pointHandler.active = false;
						this.featureDrawing.tgBar.selectedIndex = -1;
						this.featureDrawing.drawType = "";
						this.featureDrawing.activeDrag();
						this.featureDrawing.selectFeatureHandler.active = false;
					}
					//hide handcursor
					this.map.dispatchEvent(new SpriteCursorEvent(SpriteCursorEvent.SPRITECURSOR_HIDE_HAND));	
				}
				//user switches to drawing tab
				else{
					this.featureDrawing.selectFeatureHandler.active = true;
					//show handcursor
					this.map.dispatchEvent(new SpriteCursorEvent(SpriteCursorEvent.SPRITECURSOR_SHOW_HAND));
				}
			}		
			
			//check if the user wants to continue
			private function alertContinueHandler(event:CloseEvent):void {
            	var i:Number = 0;
            	var f:org.openscales.core.feature.VectorFeature;
            	// User click "Continue", he wants to continue
            	if (event.detail==Alert.OK){
               		if(this.featureDrawing.drawType != ""){
						this.featureDrawing.finishPath(); 
						this.featureDrawing.finishPolygon(); 
						this.featureDrawing.pointHandler.active = false;
						this.featureDrawing.tgBar.selectedIndex = -1;
						this.featureDrawing.drawType = "";
						this.featureDrawing.activeDrag();
					}
					else if(this.featureDrawing.selectFeatureHandler != null){
						this.featureDrawing.selectFeatureHandler.active=false;
					}
					for(i;i<this.featureDrawing.selectFeatureHandler.selectFeatures.length;i++){
							f=this.featureDrawing.selectFeatureHandler.selectFeatures[i];
							if(f != null){if(f.selected){f.selected = false;f.style = f.originalStyle;f.layer.redraw();}}
						}	
						this.featureDrawing.selectFeatureHandler.selectFeatures = null;
            	}
            	else{(this.parent as TabNavigator).selectedIndex = this.featureDrawing.indexTabDrawing;}
			}
			
			
			
			private function onDragingFeature(evt:FeatureEvent):void{
				/* isDragging = true; */
			}
		]]>
	</mx:Script>
	
	<control:FeatureDrawing id="featureDrawing" map="{this.map}"/>
		
	<mx:Text x="10" y="40" text="To finalize a path or a polygon, just double click on map." width="310" height="22" fontStyle="italic" textAlign="center" />
	<mx:Text text="For the moment you can't delete WFS points, even if they are selected" width="280" height="31" fontStyle="italic" textAlign="center" x="25" y="219"/>
	<mx:Text text="Merge works only with Point in this moment" width="280" height="31" fontStyle="italic" textAlign="center" x="25" y="95"/>

	<control:FeatureInfo id="featureInfo" x="10" y="261" width="310" height="165"/>
	
</control:Control>