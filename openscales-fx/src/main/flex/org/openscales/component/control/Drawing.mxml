<?xml version="1.0" encoding="utf-8"?>
<control:Control xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:control="org.openscales.component.control.*"
	xmlns:os="http://openscales.org" creationComplete="this.featureInfo.map = this.map; this.tgBar.selectedIndex = -1"
	width="330" height="284">
		
	<mx:Script>
		<![CDATA[
			import org.openscales.core.feature.Style;
			import org.openscales.core.feature.Feature;
			import flash.sampler.NewObjectSample;
			import org.openscales.core.handler.mouse.DragHandler;
			import mx.controls.ToggleButtonBar;
			import mx.events.ItemClickEvent;
			import org.openscales.core.events.FeatureEvent;
			import flash.utils.getQualifiedClassName;
			import org.openscales.core.layer.VectorLayer;
			import org.openscales.core.handler.sketch.DrawPolygonHandler;
			import org.openscales.core.handler.sketch.DrawPathHandler;
			import mx.controls.Alert;
			import org.openscales.core.layer.VectorLayer;
			import org.openscales.core.handler.Handler;
			import org.openscales.core.handler.sketch.DrawPointHandler;
			import org.openscales.core.geometry.Geometry;
			
			import org.openscales.core.Map;
			
			
			public var drawLayer:VectorLayer = new VectorLayer("Sketch");			
			public var pointHandler:DrawPointHandler = new DrawPointHandler(null, false, drawLayer);
			public var polygonHandler:DrawPolygonHandler = new DrawPolygonHandler(null, false, drawLayer);
			public var pathHandler:DrawPathHandler = new DrawPathHandler(null,false,drawLayer);
			
			
			private var drawType:String = "";
			

			public function onDeleteAllClick(event:Event):void {
				drawLayer.destroyFeatures();
				drawLayer.renderer.clear();
				
				switch(drawType)
				{
					case "path":{pathHandler.newFeature = true; break;}
					case "polygon":{polygonHandler.newFeature = true; break;}
				}
			}
			
			public function onDeleteLastClick(event:Event):void {
				var last:Number = drawLayer.features.length - 1;
				
				if (last >= 0) {				
					switch(drawType)
					{
						case "path":		
							drawLayer.removeFeatures(drawLayer.features[last]);
							
							if (last - 1 >= 0 && getQualifiedClassName(drawLayer.features[last-1].geometry) == "org.openscales.core.geometry::LineString") {
								pathHandler.lastPoint = drawLayer.features[last-1].geometry.getLastPoint();
							}
							else {
								pathHandler.newFeature = true;
							}
							break;						
						case "polygon":
							var featuresToRemove:Array = [];
							featuresToRemove.push(drawLayer.features[last]);
							if (last-1 >= 0 && getQualifiedClassName(drawLayer.features[last-1].geometry) == "org.openscales.core.geometry::Point") {
								featuresToRemove.push(drawLayer.features[last-1]);
							}
							drawLayer.removeFeatures(featuresToRemove);
							polygonHandler.newFeature = true;
							
							break;
						default:
							drawLayer.removeFeatures(drawLayer.features[last]);
							break;
					}   
				}
				else {
					Alert.show("There are not features to delete !", "Message");
				}
			}
			
			public function selectFeature(event:FeatureEvent):void{
				if(!pathHandler.active && !polygonHandler.active && !pointHandler.active){
					var newStyle:Style = new Style();
					newStyle.fillColor = 0xFFFFFF;
					newStyle.strokeColor = 0xFFFFFF;
					/* var oldStyle:Style = new Style();
					oldStyle.fillColor = 0x60FFE9;
					oldStyle.strokeColor = 0x60FFE9; */
				
					var feat:org.openscales.core.feature.VectorFeature = event.vectorfeature;
					/* for each(var f:Feature in feat){
						if(f.selected){
							feat.style = oldStyle;
						}
					}  */
					feat.style = newStyle;
					feat.selected = true;
					drawLayer.renderer.clear();
					drawLayer.redraw();
				}
				
			}
			
			override public function set map(value:Map):void
			{
				super.map = value;
				
				if (this.map != null) {
					pointHandler.map = this.map;
					pathHandler.map = this.map;
					polygonHandler.map = this.map
					this.map.addLayer(drawLayer);
				}
				this.map.addEventListener(FeatureEvent.FEATURE_CLICK, selectFeature);
			}
			
			private function clickHandler(event:ItemClickEvent):void{
				var handler:Number = event.index;
				var h:Handler;
				for each(h in this.map.handlers){
					if(h is DragHandler){
						h.active = false;
					}
				}
				switch(handler)
				{
					case 0:		//click on button point
						if(drawType!="point"){
							if(pathHandler.active){
								pathHandler.drawFinalPath();
								pathHandler.active = false;
							}else if(polygonHandler.active){
								polygonHandler.drawFinalPoly();
								polygonHandler.active = false;
							}												
							pointHandler.active = true;
							drawType = "point";
						}
						else{
							drawType = "";
							pointHandler.active = false;
							this.tgBar.selectedIndex = -1;
							for each(h in this.map.handlers){
								if(h is DragHandler){
									h.active = true;
								}
							}
						}						
						break;
					
					case 1:		//click on button path
						if(drawType!="path"){
							if(polygonHandler.active){
								polygonHandler.drawFinalPoly();
								polygonHandler.active = false;
							}						
							pointHandler.active = false;
							pathHandler.active = true;
							drawType = "path";
						}
						else{
							drawType = "";
							pathHandler.drawFinalPath();
							pathHandler.active = false;
							this.tgBar.selectedIndex = -1;
							for each(h in this.map.handlers){
								if(h is DragHandler){
									h.active = true;
								}
							}
						}
						break;
						
					case 2:		//click on button polygon
						if(drawType!="polygon"){
							if(pathHandler.active){
								pathHandler.drawFinalPath();
								pathHandler.active = false;
							}						
							pointHandler.active = false;
							polygonHandler.active = true;
							drawType = "polygon";
						}
						else{
							drawType = "";
							polygonHandler.active = false;
							polygonHandler.drawFinalPoly();
							this.tgBar.selectedIndex = -1;
							for each(h in this.map.handlers){
								if(h is DragHandler){
									h.active = true;
								}
							}
						}
						break;
				}
			}
		]]>
	</mx:Script>
	
	<mx:ToggleButtonBar x="10" y="10" horizontalGap="5" itemClick="clickHandler(event);" horizontalAlign="center" selectedIndex="-1" id="tgBar">
		<mx:Array>
			<mx:Object icon="@Embed('/org/openscales/component/images/IconeDessinPoint.swf')" id="btnPoint"/>
			<mx:Object icon="@Embed('/org/openscales/component/images/IconeDessinLigne.swf')" id="btnPath"/>
			<mx:Object icon="@Embed('/org/openscales/component/images/IconeDessinPoly.swf')" id="btnPolygon"/>
		</mx:Array>
	</mx:ToggleButtonBar>	
	
	<mx:Button x="10" y="78" label="DeleteAll" id="btnDeleteAll" click="this.onDeleteAllClick(event)" width="104"/>
	<mx:Button x="10" y="48" label="DeleteLast" width="104" id="btnDeleteLast" click="this.onDeleteLastClick(event)"/>
		
	<mx:Text x="160" y="5" text="Tooltip : to finalize a path or a polygon just double click on map." width="143" height="76" fontStyle="italic"/>
		
	<control:FeatureInfo id="featureInfo" x="10" y="108" width="310" height="166">
	</control:FeatureInfo>
	
</control:Control>